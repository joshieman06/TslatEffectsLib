plugins {
    id 'ml-platform-config'
    id 'net.neoforged.gradle.userdev' version '7.0.133+'
    id 'net.darkhax.curseforgegradle' version '1.1.15'
    id "com.modrinth.minotaur" version "2.+"
}

def accessTransformersFile = file('src/main/resources/META-INF/accesstransformer.cfg')

if (accessTransformersFile.exists())
    minecraft.accessTransformers.file accessTransformersFile

subsystems {
    parchment {
        minecraftVersion = project.mappings_mc_version
        mappingsVersion = project.parchment_version
    }
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }
	
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
	
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"
}

processResources {
	exclude '**/*.accesswidener'
}

task publishToCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    group = "publishing"
    apiToken = System.getenv("CURSEFORGE_TOKEN") ?: "Invalid/No API Token Found"

    def mainFile = upload(curseforge_id, jar)
    mainFile.releaseType = "release"
    mainFile.addModLoader("NeoForge")
    mainFile.addGameVersion(minecraft_version)
    mainFile.addJavaVersion("Java ${java_version}")
    mainFile.changelog = "${changelog_url}"
    mainFile.displayName = base.archivesName.get()

    //https://github.com/Darkhax/CurseForgeGradle#available-properties
}

modrinth {
    token = System.getenv("modrinthKey")
    projectId = mod_id
    versionNumber = project.version
    versionType = "release"
    uploadFile = jar
    gameVersions = ["${minecraft_version}"]
    loaders = ["neoforge"]
}